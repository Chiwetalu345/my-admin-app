{"version":3,"sources":["./src/app/Shared/crud.service.ts","./src/environments/environment.ts","./src/app/main-layout/main-layout.component.ts","./src/app/main-layout/main-layout.component.html","./src/app/Shared/firebase.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/Shared/frud.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  constructor(public fireservices:AngularFirestore) { }\n\n  create_Newuser(Record:any)\n  {\n    return this.fireservices.collection('Users').doc(Record['id']).set(Record)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n   firebase: {\n    apiKey: \"AIzaSyAU4uv_7UNnKhg_c71Oidde9ZFI2J7QEFM\",\n    authDomain: \"fir-angular-auth-46a61.firebaseapp.com\",\n    projectId: \"fir-angular-auth-46a61\",\n    storageBucket: \"fir-angular-auth-46a61.appspot.com\",\n    messagingSenderId: \"995107071202\",\n    appId: \"1:995107071202:web:34ea6df29f68536142eabb\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout-box\">\n\n    <div class=\"top-bar\">\n        <h1>Platform Capital</h1>\n    </div>\n\n\n    <div class=\"page-component\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n   isLoggedin = false\n  constructor(public firebaseAuth:AngularFireAuth) { }\n  async signin(email:string, password:string){\n    await this.firebaseAuth.signInWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedin = true\n      localStorage.setItem('user', JSON.stringify(res.user))\n    })\n  }\n  async signup(email:string, password:string){\n    await this.firebaseAuth.createUserWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedin = true\n      localStorage.setItem('user', JSON.stringify(res.user))\n    })\n  }\n  logout(){\n    this.firebaseAuth.signOut()\n    localStorage.removeItem('user')\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\nimport { FirebaseService } from '../Shared/firebase.service';\nimport { FrudService } from '../Shared/frud.service';\nimport { CrudService } from '../Shared/crud.service'\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { LoginComponent } from '../login/login.component'\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\n\n\nexport class DashboardComponent implements OnInit {\n  school_name!: string;\n  user_email!: string;\n  message!: string;\n  user_password!: string;\n  student_number!: string;\n  date_established!: string;\n  state!: string;\n  city!: string;\n  address!: string;\n  postal_code!: string;\n  telephone_number!: string;\n\n  // const a = new LoginComponent();\n  // a.handleLogout();\n\n\n  constructor(public firebaseService: FirebaseService, public crudservice: CrudService, private router: Router, private route: ActivatedRoute, public frudservice: FrudService) { }\n\n\n  ngOnInit(): void {\n    firebase.default.auth().onAuthStateChanged(user => {\n      if (user == null) {\n        //go to login page\n        location.href = \"/login\"\n      }\n    })\n  }\n  CreateRecord() {\n    let Record: any = {};\n    // Record['id'] = firebase.default.firestore().collection(\"users\").doc().id\n    Record['student_number'] = this.student_number;\n    Record['school'] = this.school_name;\n    Record['date_establishedl'] = this.date_established;\n    Record['state'] = this.state;\n    Record['city'] = this.city;\n    Record['address'] = this.address;\n    Record['postal_code'] = this.postal_code;\n    Record['telephone_number'] = this.telephone_number;\n    // Record['school'] = this.school_name;\n    // Record['timestamp'] = firebase.default.firestore.FieldValue.serverTimestamp();\n    // Record['created_date'] = new Date().toDateString()\n\n    this.crudservice.create_Newuser(Record).then(res => {\n      this.school_name = '';\n      this.student_number = '';\n      this.date_established = '';\n      this.state = ''\n      this.city = '';\n      this.address = '';\n      this.postal_code = '';\n      this.telephone_number = '';\n      console.log(res);\n      this.message = 'User data save done'\n    }).catch(error => {\n      console.log(error);\n    });\n\n  }\n  logout() {\n    this.firebaseService.logout()\n  }\n}\n","<body>\n\n    <form #noteForm=\"ngForm\">\n\n        <h1>Onboarding</h1>\n\n        <fieldset>\n            <legend><span class=\"number\">1</span>School info</legend>\n            <label for=\"name\">Name of School:</label>\n            <input type=\"text\" id=\"name\" name=\"user_name\" [(ngModel)]=\"school_name\">\n\n            <label>Category:</label>\n            <input type=\"radio\" id=\"under_13\" value=\"under_13\" name=\"user_age\"><label for=\"under_13\"\n                class=\"light\">Private</label><br>\n            <input type=\"radio\" id=\"over_13\" value=\"over_13\" name=\"user_age\"><label for=\"over_13\" class=\"light\">Public</label>\n            \n            <label for=\"mail\">Number of students</label>\n            <input type=\"number\" id=\"mail\" name=\"student_number\" [(ngModel)]=\"student_number\">\n\n            <label for=\"password\">Date established:</label>\n            <input type=\"date\" id=\"password\" name=\"date_established\" [(ngModel)]=\"date_established\">\n\n            <label for=\"name\">State:</label>\n            <input type=\"text\" id=\"name\" name=\"state\" [(ngModel)]=\"state\">\n\n            <label for=\"name\">City:</label>\n            <input type=\"text\" id=\"name\" name=\"city\" [(ngModel)]=\"city\">\n\n            <label for=\"name\">Address:</label>\n            <input type=\"text\" id=\"name\" name=\"address\" [(ngModel)]=\"address\">\n\n            <label for=\"name\">Postal code:</label>\n            <input type=\"text\" id=\"name\" name=\"postal_code\" [(ngModel)]=\"postal_code\">\n\n            <label for=\"name\">Telephone number:</label>\n            <input type=\"text\" id=\"name\" name=\"telephone_number\" [(ngModel)]=\"telephone_number\">\n\n            {{message}}\n            \n        </fieldset>\n\n        <!-- <fieldset>\n            <legend><span class=\"number\">2</span>Your profile</legend>\n            <label for=\"bio\">Biography:</label>\n            <textarea id=\"bio\" name=\"user_bio\"></textarea>\n        </fieldset>\n        <fieldset>\n            <label for=\"job\">Job Role:</label>\n            <select id=\"job\" name=\"user_job\">\n                <optgroup label=\"Web\">\n                    <option value=\"frontend_developer\">Front-End Developer</option>\n                    <option value=\"php_developor\">PHP Developer</option>\n                    <option value=\"python_developer\">Python Developer</option>\n                    <option value=\"rails_developer\"> Rails Developer</option>\n                    <option value=\"web_designer\">Web Designer</option>\n                    <option value=\"WordPress_developer\">WordPress Developer</option>\n                </optgroup>\n                <optgroup label=\"Mobile\">\n                    <option value=\"Android_developer\">Androild Developer</option>\n                    <option value=\"iOS_developer\">iOS Developer</option>\n                    <option value=\"mobile_designer\">Mobile Designer</option>\n                </optgroup>\n                <optgroup label=\"Business\">\n                    <option value=\"business_owner\">Business Owner</option>\n                    <option value=\"freelancer\">Freelancer</option>\n                </optgroup>\n                <optgroup label=\"Other\">\n                    <option value=\"secretary\">Secretary</option>\n                    <option value=\"maintenance\">Maintenance</option>\n                </optgroup>\n            </select>\n\n            <label>Interests:</label>\n            <input type=\"checkbox\" id=\"development\" value=\"interest_development\" name=\"user_interest\"><label\n                class=\"light\" for=\"development\">Development</label><br>\n            <input type=\"checkbox\" id=\"design\" value=\"interest_design\" name=\"user_interest\"><label class=\"light\"\n                for=\"design\">Design</label><br>\n            <input type=\"checkbox\" id=\"business\" value=\"interest_business\" name=\"user_interest\"><label class=\"light\"\n                for=\"business\">Business</label> -->\n\n        <!-- </fieldset> -->\n\n        <button type=\"submit\" (click)=\"CreateRecord()\">Sign Up</button>\n        <button type=\"submit\" (click)=\"logout()\" class=\"logout\">Log out</button>\n        <!-- <app-dashboard (isLogout)=\"handleLogout()\"></app-dashboard> -->\n    </form>\n\n</body>\n\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from  \"firebase/app\"\nimport \"firebase/auth\"\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'my-admin-app';\n\n  ngOnInit() {\n    \n  }\n}\n","\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport{ FormsModule } from '@angular/forms';\n\nimport{ AngularFireModule } from '@angular/fire';\nimport{ AngularFireDatabaseModule } from '@angular/fire/database';\nimport{ environment } from '../environments/environment';\nimport{ AngularFirestoreModule } from '@angular/fire/firestore';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainLayoutComponent,\n    SignupComponent,\n    DashboardComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFirestoreModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FrudService {\n\n  constructor(public fireservices:AngularFirestore) { }\n  \n  create_Newdata(Record:any)\n  {\n    return this.fireservices.collection('Users').doc(Record['id']).set(Record)\n  }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport { FirebaseService } from '../Shared/firebase.service';\nimport { CrudService } from '../Shared/crud.service'\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  isSignedIn = false\n\n  user_name!: string;\n  user_email!: string;\n  message!: string;\n  user_password!: string;\n\n  blocked = false;\n\n  constructor(public firebaseService: FirebaseService, public crudservice: CrudService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('user')! == null)\n      this.isSignedIn = true\n    else\n      this.isSignedIn = false\n  }\n  async onSignup(email: string, password: string) {\n    await this.firebaseService.signup(email, password)\n    let Record: any = {};\n    Record['id'] = firebase.default.firestore().collection(\"users\").doc().id\n    Record['email'] = this.user_email;\n    Record['name'] = this.user_name;\n    Record['blocked'] = this.blocked;\n    Record['timestamp'] = firebase.default.firestore.FieldValue.serverTimestamp();\n    Record['created_date'] = new Date().toDateString()\n\n    this.crudservice.create_Newuser(Record).then(res => {\n      this.user_name = '';\n      this.user_email = '';\n      this.user_password = '';\n      this.blocked = false;\n      console.log(res);\n      this.message = 'User data save done'\n    }).catch(error => {\n      console.log(error);\n    });\n    if (this.firebaseService.isLoggedin)\n      this.isSignedIn = true\n    alert(\"Sign up is successful\")\n    this.router.navigateByUrl(\"/home\")\n  }\n  async onSignin(email: string, password: string) {\n    await this.firebaseService.signup(email, password)\n    if (this.firebaseService.isLoggedin)\n      this.isSignedIn = true\n  }\n  handleLogout() {\n    this.isSignedIn = false;\n  }\n}\n\n\n","<body>\n\n    <form #noteForm=\"ngForm\">\n\n        <h1>Sign Up</h1>\n\n        <fieldset>\n            <!-- <legend><span class=\"number\">1</span>Your basic info</legend> -->\n            <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"user_name\" [(ngModel)]=\"user_name\" required class=\"input\" >\n\n            <label for=\"mail\">Email:</label>\n            <input type=\"email\" id=\"mail\" name=\"user_email\"  [(ngModel)]=\"user_email\"  required class=\"input\" #emailSignup>\n\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" name=\"user_password\" [(ngModel)]=\"user_password\"  required class=\"input\" #passwordSignup>\n\n        </fieldset>\n\n        <!-- <fieldset>\n            <legend><span class=\"number\">2</span>Your profile</legend>\n            <label for=\"bio\">Biography:</label>\n            <textarea id=\"bio\" name=\"user_bio\"></textarea>\n        </fieldset> -->\n        \n        <button type=\"submit\" (click)=\"onSignup(emailSignup.value,passwordSignup.value)\" [disabled]=\"!user_name||!user_email\">Sign Up</button>\n    </form>\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: MainLayoutComponent, children: [\n      { path: ' ', component: SignupComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'home', component: DashboardComponent }\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport \"firebase/firestore\";\nimport { FirebaseService } from '../Shared/firebase.service';\nimport { CrudService } from '../Shared/crud.service'\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isSignedIn = false\n\n  user_name!: string;\n  user_email!: string;\n  message!: string;\n  user_password!: string;\n\n  blocked = false;\n\n  constructor(public firebaseService: FirebaseService, public crudservice: CrudService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('user') !== null)\n      this.isSignedIn = true\n    else\n      this.isSignedIn = false\n  }\n  async onSignup(email: string, password: string) {\n    await this.firebaseService.signup(email, password)\n    let Record: any = {};\n    Record['id'] = firebase.default.firestore().collection(\"users\").doc().id\n    Record['email'] = this.user_email;\n    Record['name'] = this.user_name;\n    Record['blocked'] = this.blocked;\n    Record['timestamp'] = firebase.default.firestore.FieldValue.serverTimestamp();\n    Record['created_date'] = new Date().toDateString()\n\n    this.crudservice.create_Newuser(Record).then(res => {\n      this.user_name = '';\n      this.user_email = '';\n      this.user_password = '';\n      this.blocked = false;\n      console.log(res);\n      this.message = 'User data save done'\n    }).catch(error => {\n      console.log(error);\n    });\n    if (this.firebaseService.isLoggedin)\n      this.isSignedIn = true\n    alert(\"Sign up is successful\")\n    this.router.navigateByUrl('d');\n  }\n  async onSignin(email: string, password: string) {\n    await this.firebaseService.signin(email, password)\n    if (this.firebaseService.isLoggedin) {\n      this.isSignedIn = true\n      this.router.navigateByUrl(\"/home\")\n    }\n  }\n  public handleLogout() {\n    this.isSignedIn = false;\n\n  }\n}\n\n\n\n","<body>\n\n    <form #noteForm=\"ngForm\">\n\n        <h1>Login</h1>\n\n        <fieldset>\n            <!-- <legend><span class=\"number\">1</span>Your basic info</legend> -->\n            <!-- <label for=\"name\">Name:</label>\n            <input type=\"text\" id=\"name\" name=\"user_name\" required class=\"input\"> -->\n\n            <label for=\"mail\">Email:</label>\n            <input type=\"email\" id=\"mail\" name=\"user_email\" required class=\"input\"\n                #email>\n\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" name=\"user_password\" required class=\"input\"\n                #password>\n\n        </fieldset>\n\n        <!-- <fieldset>\n            <legend><span class=\"number\">2</span>Your profile</legend>\n            <label for=\"bio\">Biography:</label>\n            <textarea id=\"bio\" name=\"user_bio\"></textarea>\n        </fieldset> -->\n\n        <button type=\"submit\" (click)=\"onSignin(email.value,password.value)\" >Login</button>\n    </form>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}